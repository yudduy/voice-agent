-- Create phone_links table to map phone numbers to users
CREATE TABLE public.phone_links (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    phone_number TEXT NOT NULL UNIQUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Add comments to phone_links table
COMMENT ON TABLE public.phone_links IS 'Maps phone numbers to Supabase auth users.';
COMMENT ON COLUMN public.phone_links.user_id IS 'Foreign key to the user in auth.users.';
COMMENT ON COLUMN public.phone_links.phone_number IS 'The E.164 formatted phone number.';

-- Create preferences table for user-specific settings
CREATE TABLE public.preferences (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL UNIQUE,
    voice_preference TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Add comments to preferences table
COMMENT ON TABLE public.preferences IS 'Stores user-specific application preferences.';
COMMENT ON COLUMN public.preferences.voice_preference IS 'Identifier for the preferred TTS voice.';

-- Create call_history table to log voice calls
CREATE TABLE public.call_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,
    phone_number TEXT NOT NULL,
    call_sid TEXT NOT NULL UNIQUE,
    call_status TEXT,
    duration INTEGER,
    transcript TEXT,
    summary TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Add comments to call_history table
COMMENT ON TABLE public.call_history IS 'Logs completed voice call sessions.';
COMMENT ON COLUMN public.call_history.user_id IS 'The user associated with the call, if known.';

-- Create sms_history table to log SMS interactions
CREATE TABLE public.sms_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,
    phone_number TEXT NOT NULL,
    message_sid TEXT NOT NULL UNIQUE,
    direction TEXT NOT NULL,
    content TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Add comments to sms_history table
COMMENT ON TABLE public.sms_history IS 'Logs inbound and outbound SMS messages.';
COMMENT ON COLUMN public.sms_history.direction IS 'Indicates if the message was "inbound" or "outbound".';

-- Enable Row Level Security (RLS) for all tables
ALTER TABLE public.phone_links ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.preferences ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.call_history ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.sms_history ENABLE ROW LEVEL SECURITY;

-- RLS Policies for preferences: Users can only manage their own preferences.
CREATE POLICY "Allow users to manage their own preferences"
ON public.preferences FOR ALL
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

-- RLS Policies for phone_links: Users can only see their own linked numbers.
CREATE POLICY "Allow users to see their own phone links"
ON public.phone_links FOR SELECT
USING (auth.uid() = user_id);

-- Note: More specific RLS policies for history tables might be needed
-- depending on application logic (e.g., can users view their own history?).
-- For now, we keep it simple. Service roles will bypass RLS. 